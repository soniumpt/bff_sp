//-----------------------Order and Chaos Main Settings-----------------------
//-									    -
//------------------------By James "Wigifer" Timbrell------------------------
//-                                                                         -
//---------------------------------------------------------------------------

[FUNCTION OC_ISPROTECTED]
//Check now if they are in home city
IF (<ISORDER> && <REGION.DEFNAME>=a_townMagincia)
   RETURN 1
ELSEIF (<ISCHAOS> && <REGION.DEFNAME>=a_townSerphold)
   RETURN 1
ELSE
   RETURN 0
ENDIF

[FUNCTION OCHome]
IF !(<FINDID.M_OCHome.UID>)
   IF (<SRC.FINDID.i_delivery_memory.UID>)
      SRC.SYSMESSAGE You can't travel by magic, it ruins deliveries!
      RETURN 1
   ELSEIF ( <REGION_SKARGARD> )
        SYSMESSAGE You can't do that from here.
      	RETURN 1
   ELSEIF ( <REGION_BIZZARO> )
        SYSMESSAGE You can't do that from here.
      	RETURN 1      	
   ELSEIF ( <FLAGS> & statf_freeze ) 
      SYSMESSAGE You can't do that in your current state.
      RETURN 1
   ELSEIF ( <FLAGS> & statf_stone ) 
      SYSMESSAGE You can't do that in your current state.
      RETURN 1
   ELSEIF ( <REGION.FLAGS> & region_antimagic_all )
      SYSMESSAGE You can't do that from here.
      RETURN 1
   ELSEIF (<REGION.FLAGS> & region_antimagic_recall_out)
      SYSMESSAGE You can't do that from here.
      RETURN 1
   ELSEIF ( ( (<MEMORYFINDTYPE(memory_fight).uid>) && ( <UID.<MEMORYFINDTYPE(memory_fight).LINK>.NPC> = 0 ) ) || ( (<MEMORYFINDTYPE(MEMORY_IAGGRESSOR).uid>) && ( <UID.<MEMORYFINDTYPE(MEMORY_IAGGRESSOR).LINK>.NPC> = 0 ) ) )
      SYSMESSAGE You are too busy fighting to do that right now.
      RETURN 1
   ELSEIF ( (<MEMORYFINDTYPE(memory_harmedby).uid>) && ( <UID.<MEMORYFINDTYPE(memory_harmedby).LINK>.NPC> = 0 ) )
      SYSMESSAGE You are too busy defending yourself to do that right now.
      RETURN 1
   ENDIF
   
   IF (<ISORDER>)
      NEWITEM M_OCHome
      EQUIP <ACT>
   ELSEIF (<ISCHAOS>)
      NEWITEM M_OCHome
      EQUIP <ACT>   
   ENDIF
ELSE
   SYSMESSAGE You are already transporting.
ENDIF
RETURN 1

[ItemDef M_OCHome]
id=i_memory
Name=Order Chaos Home
type=t_eq_script

ON=@Create
   TIMER=1
   MORE1 = 1
   
ON=@Equip
   SRC.SAY Kal Ort Por
   
ON=@Timer
   
   IF !( <CONT.FLAGS> & statf_dead ) || (<CONT.TAG0.REP.ALIGNMENT> >= 10000) )
      IF !(<UID.<CONT.REGION.UID>.TYPE> = T_MULTI)
         IF ( <MORE1> <= 7 )
            IF (<CONT.ISORDER>)
               CONT.EFFECT=3,i_fx_sparkle,0,22,0,0b03
            ELSEIF (<CONT.ISCHAOS>)
               CONT.EFFECT=3,i_fx_sparkle,0,22,0,0af7
            ENDIF
            MORE1 = <MORE1>+1
            TIMER = 1
         ELSE
            IF (<CONT.ISORDER>)
               CONT.Go 3720,2064,25
            ELSEIF (<CONT.ISCHAOS>)
               CONT.Go 3032,3382,35
            ENDIF
            REMOVE 
         ENDIF
      ELSE
      	   CONT.SYSMESSAGE You can't use this command from a house.
      	   REMOVE
      ENDIF
   ELSE
      CONT.SYSMESSAGE You can't use this command while dead yet.
      REMOVE
   ENDIF
   RETURN 1


[FUNCTION region_chaos]
  if ( 0 )
  elseif ( !strcmpi( "<REGION.NAME>", "Serpent's Hold" ) )
      return 1
  else
      return 0
  endif

[FUNCTION region_order]
  if ( 0 )
  elseif ( !strcmpi( "<REGION.NAME>", "Magincia" ) )
      return 1
  else
      return 0
  endif

[ITEMDEF i_alignment_timer_check]
ID=i_memory
TYPE=t_eq_script
NAME=Alignment Timer check

ON=@CREATE
TIMER=604800

ON=@TIMER
REMOVE
RETURN 1

[ITEMDEF i_orderchaos_fix]
NAME=Order-Chaos Reputation Fix and Resetter
ID=i_guildstone
TYPE=T_NORMAL

ON=@CREATE
   COLOR=01

ON=@DCLICK
   SRC.TAG0.REP.ALIGNMENT=
   SRC.MESSAGE Order-Chaos Reputation Reset
   RETURN 1

[DEFNAME def_alignment]
alignment_none		0
alignment_chaos		1	// Chaos
alignment_order		2	// Order


[FUNCTION ALIGNMENT_DISCONNECT]
   if ( <TAG.ALIGNMENT> )
      DISCONNECT
   endif


[FUNCTION ALIGNMENT_NAME]
   if ( !strcmp( "<args>", "" ) )
      VAR.ALIGNMENT	= <ALIGNMENT>
   else
      VAR.ALIGNMENT	= <args>
   endif

   VAR.ALIGNMENT_NAME	= ""
   doswitch <var.ALIGNMENT>
      VAR.ALIGNMENT_NAME	= ""
      VAR.ALIGNMENT_NAME	= "Chaos"
      VAR.ALIGNMENT_NAME	= "Order"
   enddo


[FUNCTION ALIGNMENT_ACCEPT]
   TAG.ALIGNMENT		= <args>
   TAG0.REP.ALIGNMENT	= 1000


[FUNCTION alignment_click]
   doswitch <ALIGNMENT>
      alignment_none_click
      alignment_chaos_click
      alignment_order_click
//      alignment_dk_click
//      alignment_hk_click
   enddo


[FUNCTION ALIGNMENT]
   if ( strcmp( "<args>", "" ) )
      TAG.ALIGNMENT	= <args>
      return 0
   endif

   if ( <NPC> )
      if ( 0<TAG.CHAOS.RANK> )
         return ALIGNMENT_CHAOS
      elseif ( 0<TAG.ORDER.RANK> )
          return ALIGNMENT_ORDER
      elseif ( strcmp( "<TAG.ALIGNMENT>", "" ) )
          return <TAG.ALIGNMENT>
      endif
      return ALIGNMENT_none
   endif

//   if ( !strcmp( "<TAG.ALIGNMENT>", "" ) )
//      return alignment_none
//   endif

   if ( !strcmp( "<TAG.ALIGNMENT>", "alignment_order" ) )
      return ALIGNMENT_ORDER
   elseif ( !strcmp( "<TAG.ALIGNMENT>", "alignment_chaos" ) )
      return ALIGNMENT_CHAOS
   elseif ( !strcmp( "<TAG.FACTION>", "faction_dk" ) )
      return ALIGNMENT_DK
   elseif ( !strcmp( "<TAG.FACTION>", "faction_hk" ) )
      return ALIGNMENT_HK
   else
      return alignment_none
   endif
   
   return alignment_none



[FUNCTION ALIGNMENT_INIT]
   if ( 0<TAG.ALIGNMENT.VERSION> == 0 )
      TAG.ALIGNMENT.VERSION = 0
   endif
   if ( 0<TAG.ALIGNMENT.EXPELLED> == 0 )
      TAG.ALIGNMENT.EXPELLED	= 0
   endif

   if ( <TAG.ALIGNMENT.VERSION> == 2 )
      return 1
   endif

   if ( 0 )
   elseif ( 0<TAG.REP.ORDER> )
      TAG.REP0.ALIGNMENT	= <TAG.REP.ORDER>
      TAG.REP.ORDER	=
      TAG.ALIGNMENT		= alignment_order
      TAG.ALIGNMENT.VERSION	= 2
      return 1
   elseif ( 0<TAG.REP.CHAOS> )
      TAG.REP0.ALIGNMENT	= <TAG.REP.CHAOS>
      TAG.REP.CHAOS	=
      if ( <TAG.ALIGNMENT.VERSION> == 1 )
         TAG.ALIGNMENT.VERSION	= 2
         TAG.ALIGNMENT		= alignment_chaos
      else
         TAG.ALIGNMENT.VERSION	= 2
         TAG.ALIGNMENT		= alignment_none
      endif
   else
      TAG.ALIGNMENT.VERSION	= 2
      TAG.ALIGNMENT		= alignment_none
   endif



[FUNCTION ALIGNMENT_EXPELLED]
   if ( !strcmp( "<args>", "" ) )
      return <eval isbit( <TAG.ALIGNMENT.EXPELLED>, <ALIGNMENT> )>
   endif

   VAR.EXPELLED = <eval isbit( <TAG.ALIGNMENT.EXPELLED>, <args> )>



[FUNCTION alignment_title]
   if ( !strcmp( "<ARGS>", "" ) )
      return 0
   endif
   if ( <ISFREEKILL> )
      TAG.NAME.HUE	=
   endif
   IF (0<TAG.ALIGNMENT.SHOWTITLE>=1)
      TAG.NAME.SUFFIX	= ", <ARGS>"
   ELSEIF ( !strcmpi( "<TAG.ALIGNMENT>", "alignment_order" ) )
      TAG.NAME.SUFFIX   = " [O]"
   ELSEIF ( !strcmpi( "<TAG.ALIGNMENT>", "alignment_chaos" ) )
      TAG.NAME.SUFFIX   = " [C]"
   ELSEIF ( !strcmpi( "<TAG.FACTION>", "faction_dk" ) ) 
      TAG.NAME.SUFFIX   = " [DK]"
   ELSEIF ( !strcmpi( "<TAG.FACTION>", "faction_hk" ) ) 
      TAG.NAME.SUFFIX   = " [HK]"      
   ENDIF

[FUNCTION alignment_none_click]
   TAG.NAME.HUE		= 
   TAG.NAME.SUFFIX	= 

[FUNCTION alignment_chaos_click]
   TAG.NAME.HUE	= 01c1
   IF <OBODY> = c_woman
      alignment_title <CHAOS_TITLE_FEMALE>
   ELSE
      alignment_title <CHAOS_TITLE>
   ENDIF
   
[FUNCTION alignment_order_click]
   TAG.NAME.HUE	= 00bd
   IF <OBODY> = c_woman
      alignment_title <ORDER_TITLE_FEMALE>
   ELSE
      alignment_title <ORDER_TITLE>
   ENDIF

[FUNCTION alignment_dk_click]
   TAG.NAME.HUE	= 01c1
   IF <OBODY> = c_woman
      alignment_title <CHAOS_TITLE_FEMALE>
   ELSE
      alignment_title <CHAOS_TITLE>
   ENDIF
   
[FUNCTION alignment_hk_click]
   TAG.NAME.HUE	= 00bd
   IF <OBODY> = c_woman
      alignment_title <ORDER_TITLE_FEMALE>
   ELSE
      alignment_title <ORDER_TITLE>
   ENDIF   

//
//  TITLE 
//

[FUNCTION CHAOS_TITLE]
   doswitch <CHAOS_RANK>
      LOCAL.TITLE	= Chaos Initiate
      LOCAL.TITLE	= Chaos Light Infantry
      LOCAL.TITLE	= Chaos Infantry
      LOCAL.TITLE	= Chaos Sergeant
      LOCAL.TITLE	= Chaos Squire
      LOCAL.TITLE	= Chaos Knight
      LOCAL.TITLE	= Chaos General
      LOCAL.TITLE	= Chaos Lord
      LOCAL.TITLE	= Chaos Baron
      LOCAL.TITLE	= Chaos Viscount
      LOCAL.TITLE	= Chaos Count
      LOCAL.TITLE	= Chaos Disciple
      LOCAL.TITLE	= Chaos Overlord
   enddo
   RETURN <LOCAL.TITLE>

[FUNCTION CHAOS_TITLE_FEMALE]
   doswitch <CHAOS_RANK>
      LOCAL.TITLE	= Chaos Initiate
      LOCAL.TITLE	= Chaos Light Infantry
      LOCAL.TITLE	= Chaos Infantry
      LOCAL.TITLE	= Chaos Sergeant
      LOCAL.TITLE	= Chaos Squire
      LOCAL.TITLE	= Chaos Knight
      LOCAL.TITLE	= Chaos General
      LOCAL.TITLE	= Chaos Lady
      LOCAL.TITLE	= Chaos Baroness
      LOCAL.TITLE	= Chaos Viscountess
      LOCAL.TITLE	= Chaos Countess
      LOCAL.TITLE	= Chaos Disciple
      LOCAL.TITLE	= Chaos Overlord
   enddo
   RETURN <LOCAL.TITLE>

[FUNCTION ORDER_TITLE]
   doswitch <ORDER_RANK>
      LOCAL.TITLE	= Order Outsider
      LOCAL.TITLE	= Order Light Infantry
      LOCAL.TITLE	= Order Infantry
      LOCAL.TITLE	= Order Sergeant
      LOCAL.TITLE	= Order Squire
      LOCAL.TITLE	= Order Knight
      LOCAL.TITLE	= Order General
      LOCAL.TITLE	= Order Lord
      LOCAL.TITLE	= Order Baron
      LOCAL.TITLE	= Order Viscount
      LOCAL.TITLE	= Order Count
      LOCAL.TITLE	= Order Disciple
      LOCAL.TITLE	= Order Overlord
   enddo
   RETURN <LOCAL.TITLE>

[FUNCTION ORDER_TITLE_FEMALE]
   doswitch <ORDER_RANK>
      LOCAL.TITLE	= Order Outsider
      LOCAL.TITLE	= Order Light Infantry
      LOCAL.TITLE	= Order Infantry
      LOCAL.TITLE	= Order Sergeant
      LOCAL.TITLE	= Order Squire
      LOCAL.TITLE	= Order Knight
      LOCAL.TITLE	= Order General
      LOCAL.TITLE	= Order Lady
      LOCAL.TITLE	= Order Baroness
      LOCAL.TITLE	= Order Viscountess
      LOCAL.TITLE	= Order Countess
      LOCAL.TITLE	= Order Disciple
      LOCAL.TITLE	= Order Overlord
   enddo
   RETURN <LOCAL.TITLE>





[FUNCTION ALIGNMENT_ACCEPT_FINISH]
   TAG.ALIGNMENT	= <args>

   doswitch <args>
      VAR.O =
      CHAOS_ACCEPT
      ORDER_ACCEPT
   enddo


[FUNCTION CHAOS_ACCEPT]
   EFFECT	= 1, i_fx_explosion_3, 6, 15, 1
   FLAGS	= <FLAGS> & ~statf_freeze

   ALIGNMENT_ACCEPT	= alignment_chaos
   REMOVE
   return 1


[FUNCTION ORDER_ACCEPT]
   EFFECT	= 1, i_fx_explosion_3, 6, 15, 1
   FLAGS	= <FLAGS> & ~statf_freeze
   
   ALIGNMENT_ACCEPT	= alignment_order
   REMOVE
   return 1


[FUNCTION ALIGNMENT_RANK]
   if ( <NPC> )
      if ( 0<TAG.ORDER.RANK> )
          return <TAG.ORDER.RANK>
      elseif ( 0<TAG.CHAOS.RANK> )
          return <TAG.CHAOS.RANK>
      elseif ( 0<TAG.ALIGNMENT.RANK> )
          return <TAG.ALIGNMENT.RANK>
      endif
      return 0
   endif

   if !( <ALIGNMENT> )
      return 0
   endif

   // if ( isbit( <ALIGNMENT_EXPELLED>, <ALIGNMENT> ) )
   //   return 0
   //endif
   
  
   VAR.RANK	= <eval (<REP_ALIGNMENT> / 1000)>
   if ( <VAR.RANK> < 0 )
      VAR.RANK	= 0
   endif
   return <VAR.RANK>



[FUNCTION ISALIGNMENT_CHAOS]
   if ( <ALIGNMENT> == alignment_chaos )
      return 1
   endif
   return 0
[FUNCTION ISALIGNMENT_ORDER]
   if ( <ALIGNMENT> == alignment_order )
      return 1
   endif
   return 0


[FUNCTION CHAOS_RANK]
   if !( <ALIGNMENT> == alignment_chaos )
      return 0
   endif
   return <ALIGNMENT_RANK>

[FUNCTION ORDER_RANK]
   if !( <ALIGNMENT> == alignment_order )
      return 0
   endif
   return <ALIGNMENT_RANK>


[FUNCTION CHAOS_EXPELLED]
   ALIGNMENT_EXPELLED	alignment_chaos
   return <var.expelled>
[FUNCTION CHAOS_EXPELLED]
   ALIGNMENT_EXPELLED	alignment_order
   return <var.expelled>


[FUNCTION rep_alignment]
   rep_get_init
   rep_get_add <TAG.REP.ALIGNMENT>
   rep_get_cap_alignment
   return <var.rep>

[FUNCTION rep_get_init]
   VAR.REP	= 0

[FUNCTION rep_report_init]
   VAR.REP.ALIGNMENT	= <rep_alignment>
   VAR.ALIGNMENT.RANK	= <ALIGNMENT_RANK>

[FUNCTION rep_get_add]
   VAR.REP = <eval (0<VAR.REP> + (0<args>))>

[FUNCTION rep_get_cap_alignment]
   if ( <var.rep> > 12000 )
      var.rep	= 12000
   elseif ( <var.rep> < -12000 )
      var.rep	= -12000
   endif


[EOF]

